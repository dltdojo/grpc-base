// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Role int32

const (
	Role_GUEST  Role = 0
	Role_MEMBER Role = 1
	Role_ADMIN  Role = 2
)

var Role_name = map[int32]string{
	0: "GUEST",
	1: "MEMBER",
	2: "ADMIN",
}
var Role_value = map[string]int32{
	"GUEST":  0,
	"MEMBER": 1,
	"ADMIN":  2,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}
func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_service_d51c832eb418a94d, []int{0}
}

type FooMessage struct {
	// {"name" : "服務機構代碼" , "maxLength": 10 }
	OrgId int32 `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// {"name" : "服務機構名稱" , "maxLength": 20 }
	OrgName string `protobuf:"bytes,2,opt,name=org_name,json=orgName,proto3" json:"org_name,omitempty"`
	// Note Blah 中文
	Note string `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	// 使用者
	Owner                *User    `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FooMessage) Reset()         { *m = FooMessage{} }
func (m *FooMessage) String() string { return proto.CompactTextString(m) }
func (*FooMessage) ProtoMessage()    {}
func (*FooMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_d51c832eb418a94d, []int{0}
}
func (m *FooMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FooMessage.Unmarshal(m, b)
}
func (m *FooMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FooMessage.Marshal(b, m, deterministic)
}
func (dst *FooMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FooMessage.Merge(dst, src)
}
func (m *FooMessage) XXX_Size() int {
	return xxx_messageInfo_FooMessage.Size(m)
}
func (m *FooMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_FooMessage.DiscardUnknown(m)
}

var xxx_messageInfo_FooMessage proto.InternalMessageInfo

func (m *FooMessage) GetOrgId() int32 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *FooMessage) GetOrgName() string {
	if m != nil {
		return m.OrgName
	}
	return ""
}

func (m *FooMessage) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *FooMessage) GetOwner() *User {
	if m != nil {
		return m.Owner
	}
	return nil
}

type User struct {
	Id                   uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Role                 Role                 `protobuf:"varint,2,opt,name=role,proto3,enum=service.Role" json:"role,omitempty"`
	CreateDate           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_d51c832eb418a94d, []int{1}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_GUEST
}

func (m *User) GetCreateDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreateDate
	}
	return nil
}

type UserRole struct {
	Role                 Role     `protobuf:"varint,1,opt,name=role,proto3,enum=service.Role" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRole) Reset()         { *m = UserRole{} }
func (m *UserRole) String() string { return proto.CompactTextString(m) }
func (*UserRole) ProtoMessage()    {}
func (*UserRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_d51c832eb418a94d, []int{2}
}
func (m *UserRole) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRole.Unmarshal(m, b)
}
func (m *UserRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRole.Marshal(b, m, deterministic)
}
func (dst *UserRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRole.Merge(dst, src)
}
func (m *UserRole) XXX_Size() int {
	return xxx_messageInfo_UserRole.Size(m)
}
func (m *UserRole) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRole.DiscardUnknown(m)
}

var xxx_messageInfo_UserRole proto.InternalMessageInfo

func (m *UserRole) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_GUEST
}

func init() {
	proto.RegisterType((*FooMessage)(nil), "service.FooMessage")
	proto.RegisterType((*User)(nil), "service.User")
	proto.RegisterType((*UserRole)(nil), "service.UserRole")
	proto.RegisterEnum("service.Role", Role_name, Role_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OpenHcosServiceClient is the client API for OpenHcosService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OpenHcosServiceClient interface {
	Echo(ctx context.Context, in *FooMessage, opts ...grpc.CallOption) (*FooMessage, error)
}

type openHcosServiceClient struct {
	cc *grpc.ClientConn
}

func NewOpenHcosServiceClient(cc *grpc.ClientConn) OpenHcosServiceClient {
	return &openHcosServiceClient{cc}
}

func (c *openHcosServiceClient) Echo(ctx context.Context, in *FooMessage, opts ...grpc.CallOption) (*FooMessage, error) {
	out := new(FooMessage)
	err := c.cc.Invoke(ctx, "/service.OpenHcosService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OpenHcosServiceServer is the server API for OpenHcosService service.
type OpenHcosServiceServer interface {
	Echo(context.Context, *FooMessage) (*FooMessage, error)
}

func RegisterOpenHcosServiceServer(s *grpc.Server, srv OpenHcosServiceServer) {
	s.RegisterService(&_OpenHcosService_serviceDesc, srv)
}

func _OpenHcosService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FooMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenHcosServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.OpenHcosService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenHcosServiceServer).Echo(ctx, req.(*FooMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenHcosService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.OpenHcosService",
	HandlerType: (*OpenHcosServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _OpenHcosService_Echo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_d51c832eb418a94d) }

var fileDescriptor_service_d51c832eb418a94d = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x50, 0xcd, 0xce, 0x93, 0x40,
	0x14, 0x15, 0x84, 0x7e, 0x5f, 0x6f, 0xd3, 0x4a, 0xc6, 0x34, 0x41, 0x34, 0xb1, 0xe2, 0x86, 0x34,
	0x11, 0x62, 0xdd, 0xe9, 0x4a, 0x53, 0xd4, 0x2e, 0xa8, 0xc9, 0xb4, 0x5d, 0xd7, 0x29, 0x5c, 0x29,
	0x09, 0x70, 0xc9, 0x30, 0xb6, 0xae, 0x7d, 0x05, 0x1f, 0xcd, 0x57, 0xf0, 0x41, 0x0c, 0x7f, 0xea,
	0xc2, 0x6f, 0xc7, 0xf9, 0xe1, 0x9c, 0x7b, 0x06, 0xa6, 0x35, 0xca, 0x4b, 0x16, 0xa3, 0x5f, 0x49,
	0x52, 0xc4, 0x6e, 0x7a, 0xe8, 0x3c, 0x49, 0x89, 0xd2, 0x1c, 0x03, 0x51, 0x65, 0x81, 0x28, 0x4b,
	0x52, 0x42, 0x65, 0x54, 0xd6, 0x9d, 0xcd, 0x79, 0xda, 0xab, 0x2d, 0x3a, 0x7d, 0xfd, 0x12, 0xa8,
	0xac, 0xc0, 0x5a, 0x89, 0xa2, 0xea, 0x0c, 0xee, 0x15, 0xe0, 0x3d, 0x51, 0x84, 0x75, 0x2d, 0x52,
	0x64, 0x73, 0x18, 0x91, 0x4c, 0x8f, 0x59, 0x62, 0x6b, 0x0b, 0xcd, 0x33, 0xb9, 0x49, 0x32, 0xdd,
	0x24, 0xec, 0x11, 0xdc, 0x36, 0x74, 0x29, 0x0a, 0xb4, 0xf5, 0x85, 0xe6, 0x8d, 0xf9, 0x0d, 0xc9,
	0x74, 0x2b, 0x0a, 0x64, 0x0c, 0x8c, 0x92, 0x14, 0xda, 0xf7, 0x5b, 0xba, 0xfd, 0x66, 0xcf, 0xc1,
	0xa4, 0x6b, 0x89, 0xd2, 0x36, 0x16, 0x9a, 0x37, 0x59, 0x4d, 0xfd, 0xe1, 0xf4, 0x43, 0x8d, 0x92,
	0x77, 0x9a, 0x7b, 0x01, 0xa3, 0x81, 0x6c, 0x06, 0x7a, 0x5f, 0x37, 0xe5, 0x7a, 0x96, 0xb0, 0x67,
	0x60, 0x48, 0xca, 0xbb, 0x9e, 0xd9, 0x3f, 0xff, 0x72, 0xca, 0x91, 0xb7, 0x12, 0x7b, 0x03, 0x93,
	0x58, 0xa2, 0x50, 0x78, 0x4c, 0x44, 0x5f, 0x3d, 0x59, 0x39, 0x7e, 0x37, 0xd5, 0x1f, 0xa6, 0xfa,
	0xfb, 0x61, 0x2a, 0x87, 0xce, 0xbe, 0x16, 0x0a, 0xdd, 0x17, 0x70, 0xdb, 0x9e, 0xd1, 0x04, 0x0d,
	0x5d, 0xda, 0x9d, 0x5d, 0x4b, 0x0f, 0x8c, 0xd6, 0x3a, 0x06, 0xf3, 0xc3, 0x21, 0xdc, 0xed, 0xad,
	0x7b, 0x0c, 0x60, 0x14, 0x85, 0xd1, 0xbb, 0x90, 0x5b, 0x5a, 0x43, 0xbf, 0x5d, 0x47, 0x9b, 0xad,
	0xa5, 0xaf, 0x3e, 0xc3, 0x83, 0x4f, 0x15, 0x96, 0x1f, 0x63, 0xaa, 0x77, 0x5d, 0x0e, 0x8b, 0xc0,
	0x08, 0xe3, 0x33, 0xb1, 0x87, 0x7f, 0x92, 0xff, 0xbe, 0xb5, 0xf3, 0x3f, 0xd2, 0x7d, 0xfc, 0xfd,
	0xe7, 0xaf, 0x1f, 0xfa, 0xdc, 0xb5, 0x82, 0xcb, 0xcb, 0x00, 0xbf, 0x89, 0xa2, 0xca, 0x31, 0xc0,
	0xf8, 0x4c, 0xaf, 0xb5, 0xe5, 0x69, 0xd4, 0x4e, 0x7b, 0xf5, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xe9,
	0xea, 0x81, 0x1a, 0x0b, 0x02, 0x00, 0x00,
}
